/*
 * The contents of this file are subject to the terms of the Common Development and
 * Distribution License (the License). You may not use this file except in compliance with the
 * License.
 *
 * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the
 * specific language governing permission and limitations under the License.
 *
 * When distributing Covered Software, include this CDDL Header Notice in each file and include
 * the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL
 * Header, with the fields enclosed by brackets [] replaced by your own identifying
 * information: "Portions Copyrighted [year] [name of copyright owner]".
 *
 * Copyright 2015 ForgeRock AS.
 */

package org.forgerock.openam.sts.rest.operation.validate;

import org.forgerock.json.JsonValue;
import org.forgerock.openam.sts.TokenMarshalException;
import org.forgerock.openam.sts.TokenValidationException;
import org.forgerock.openam.sts.user.invocation.RestSTSTokenValidationInvocationState;

/**
 * Top-level operation which will validate rest-sts issued tokens.
 */
public interface IssuedTokenValidateOperation {
    /**
     * Note that in the 13 release, token validation involves only consulting the STS TokenService to determine whether
     * the specified token is currently stored in the CTS, thus implying that it was issued by the STS, and not yet
     * expired, nor explicitly cancelled.
     * @param invocationState The invocationState, as generated by the caller, containing the to-be-validated token state
     * @return A JsonValue with a 'token_valid' key followed by either true or false
     * @throws org.forgerock.openam.sts.TokenMarshalException if the token state corresponding to the to-be-validated token was incorrect
     * @throws org.forgerock.openam.sts.TokenValidationException if an exception occurred which prevented token validation from occurring
     */
    JsonValue validateToken(RestSTSTokenValidationInvocationState invocationState) throws TokenMarshalException, TokenValidationException;
}
