<?xml version="1.0" encoding="UTF-8"?>
<!--
  ! CCPL HEADER START
  !
  ! This work is licensed under the Creative Commons
  ! Attribution-NonCommercial-NoDerivs 3.0 Unported License.
  ! To view a copy of this license, visit
  ! http://creativecommons.org/licenses/by-nc-nd/3.0/
  ! or send a letter to Creative Commons, 444 Castro Street,
  ! Suite 900, Mountain View, California, 94041, USA.
  !
  ! You can also obtain a copy of the license at
  ! src/main/resources/legal-notices/CC-BY-NC-ND.txt.
  ! See the License for the specific language governing permissions
  ! and limitations under the License.
  !
  ! If applicable, add the following below this CCPL HEADER, with the fields
  ! enclosed by brackets "[]" replaced with your own identifying information:
  !      Portions Copyright [yyyy] [name of copyright owner]
  !
  ! CCPL HEADER END
  !
  !      Copyright 2011-2015 ForgeRock AS.
  !    
-->
<chapter xml:id='chap-troubleshooting'
 xmlns='http://docbook.org/ns/docbook'
 version='5.0' xml:lang='en'
 xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'
 xsi:schemaLocation='http://docbook.org/ns/docbook
                     http://docbook.org/xml/5.0/xsd/docbook.xsd'
 xmlns:xlink='http://www.w3.org/1999/xlink'>
 <title>Troubleshooting</title>

 <indexterm>
  <primary>troubleshooting</primary>
 </indexterm>
 <indexterm>
  <primary>web policy agent</primary>
  <secondary>troubleshooting</secondary>
 </indexterm>

 <para>
  This chapter offers solutions to issues during installation of OpenAM
  policy agents.
 </para>
 
 <qandaset xml:id="solutions-to-common-issues" defaultlabel="qanda">
  <title>Solutions to Common Issues</title>

  <para>
   This section offers solutions to common problems when installing
   OpenAM policy agents:
  </para>

  <qandaentry xml:id="cannot-use-openssl-on-windows">
   <question>
    <para>
    I am trying to install a policy agent on Windows, which will connect to
    an OpenAM server running over HTTPS, but the installer reports the following:
<screen>init_ssl(): ssleay32.dll is not available (error: 87)
init_ssl(): libeay32.dll is not available (error: 87)</screen>
    </para>
   </question>

   <answer>
    <para>You must install OpenSSL when connecting to an OpenAM server
    running over HTTPS.</para>
    <para>If OpenSSL is correctly installed, you may need to apply the update
    provided in Microsoft knowledge base article KB2533623. See <link
    xlink:href="https://support.microsoft.com/en-us/kb/2533623">Microsoft
    Security Advisory: Insecure library loading could allow remote code
    execution</link></para>
   </answer>
  </qandaentry>

  <qandaentry xml:id="debug-file-and-SELinux">
   <question>
    <para>
     I am trying to install the policy agent on SELinux and I am getting error messages
     after installation. What happened?
    </para>
   </question>

   <answer>
    <para>
     SELinux must be properly configured to connect the web policy agent and OpenAM
     nodes. Either re-configure SELinux or disable it, then reinstall the policy agent.
    </para>
   </answer>
  </qandaentry>

  <qandaentry xml:id="apache-defaults-to-port-80">
   <question>
    <para>
     My Apache HTTP server is not using port 80. But when I install the
     web policy agent it defaults to port 80. How do I fix this?
    </para>
   </question>

   <answer>
    <para>
     You probably set <literal>ServerName</literal> in the Apache HTTP Server
     configuration to the host name, but did not specify the port number.
    </para>

    <para>
     Instead you must set both the host name and port number for
     <literal>ServerName</literal> in the configuration. For
     example, if you have Apache HTTP Server configured to listen on port 8080,
     then set <literal>ServerName</literal> appropriately as in the following
     excerpt:
    </para>

    <programlisting language="plain"
    >&lt;VirtualHost *:8080&gt;
ServerName www.localhost.example:8080</programlisting>
   </answer>
  </qandaentry>

  <qandaentry xml:id="web-agent-cannot-rotate-logs">
   <question>
    <para>
     My web server and web policy agent are installed as root, and the
     agent cannot rotate logs. I am seeing this error:
    </para>

    <literallayout class="monospaced">Could not rotate log file ... (error: 13)</literallayout>

    <para>What should I do?</para>
   </question>

   <answer>
    <para>
     First, avoid installing the web server (and therefore also the web
     policy agent) as root, but instead create a web server user and install
     as that user.
    </para>

    <para>
     If however you cannot avoid installing the web server and policy agent
     as root, the you must give all users read and write permissions to the
     <filename>logs/</filename> directory under the agent instance directory
     (<filename>/web_agents/<replaceable>agent_version</replaceable>/instances/agent_<replaceable>nnn</replaceable>/logs/</filename>).
     Otherwise, the web policy agent fails to rotate log files with the error
     you observed.
    </para>
   </answer>
  </qandaentry>

 <qandaentry xml:id="valid-goto-url-resources">
  <question>
   <para>
    How do I increase security against possible phishing attacks through
    open redirect?
   </para>
  </question>

  <answer>
   <para>
    You can specify a list of valid URL resources against which OpenAM
    validates the <literal>goto</literal> and <literal>gotoOnFail</literal> URL
    using the Valid <literal>goto</literal> URL Resource service.
   </para>

   <para>
    OpenAM only redirects a user if the <literal>goto</literal>
    and <literal>gotoOnFail</literal> URL matches
    any of the resources specified in this setting.
    If no setting is present, it is assumed that the <literal>goto</literal>
    and <literal>gotoOnFail</literal> URL is valid.
   </para>

   <para>
    To set the Valid <literal>goto</literal> URL Resources, use the OpenAM
    console, and navigate to Realms &gt; <replaceable>Realm
    Name</replaceable> &gt; Services. Click Add, select Validation Service, and
    then add one or more valid <literal>goto</literal> URLs.
   </para>

   <para>
    You can use the "*" wildcard to define resources,
    where "*" matches all characters except "?".
    For example, you can use the wildcards,
    such as <literal>https://website.example.com/*</literal>
    or <literal>https://website.example.com/*?*</literal>.
    For more specific patterns,
    use resource names with wildcards as described in the procedure,
    <link
     xlink:href="${serverDocBase}/admin-guide/#configure-valid-goto-url-resources"
     xlink:show="new"
     ><citetitle>Configuring Valid goto URL Resources</citetitle></link>.
   </para>
  </answer>
 </qandaentry>
 </qandaset>
</chapter>
