<?xml version="1.0" encoding="UTF-8"?>
<!--
  ! CCPL HEADER START
  !
  ! This work is licensed under the Creative Commons
  ! Attribution-NonCommercial-NoDerivs 3.0 Unported License.
  ! To view a copy of this license, visit
  ! http://creativecommons.org/licenses/by-nc-nd/3.0/
  ! or send a letter to Creative Commons, 444 Castro Street,
  ! Suite 900, Mountain View, California, 94041, USA.
  !
  ! You can also obtain a copy of the license at
  ! trunk/opendj3/legal-notices/CC-BY-NC-ND.txt.
  ! See the License for the specific language governing permissions
  ! and limitations under the License.
  !
  ! If applicable, add the following below this CCPL HEADER, with the fields
  ! enclosed by brackets "[]" replaced with your own identifying information:
  !      Portions Copyright [yyyy] [name of copyright owner]
  !
  ! CCPL HEADER END
  !
  !      Copyright 2011-2015 ForgeRock AS.
  !
-->
<section xml:id="configure-web-pa-misc-props"
         xmlns='http://docbook.org/ns/docbook' version='5.0'
         xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'
         xsi:schemaLocation='http://docbook.org/ns/docbook http://docbook.org/xml/5.0/xsd/docbook.xsd'
         xmlns:xlink='http://www.w3.org/1999/xlink'
         xmlns:xinclude='http://www.w3.org/2001/XInclude'>
  <title>Configuring Web Policy Agent Miscellaneous Properties</title>

  <indexterm>
   <primary>web policy agents</primary>
   <secondary>miscellaneous properties</secondary>
   <tertiary>configuring</tertiary>
  </indexterm>

  <para>This section covers miscellaneous web agent properties. After creating
   the agent profile, you access these properties in the OpenAM console under
   Realms &gt; <replaceable>Realm Name</replaceable> &gt; Agents &gt;
   Web &gt; <replaceable>Agent Name</replaceable> &gt; Miscellaneous.</para>

    <para>This section describes the following property groups:</para>
 <itemizedlist>
  <listitem>
   <para><xref linkend="web-agent-advice-handling-properties" /></para>
  </listitem>
    <listitem>
   <para><xref linkend="web-agent-locale-properties" /></para>
  </listitem>
    <listitem>
   <para><xref linkend="web-agent-anonymous-user-properties"/></para>
  </listitem>
      <listitem>
   <para><xref linkend="web-agent-cookie-processing-properties"/></para>
  </listitem>
  <listitem>
   <para><xref linkend="web-agent-url-handling-properties" /></para>
  </listitem>
    <listitem>
   <para><xref linkend="web-agent-ignore-naming-url-properties" /></para>
  </listitem>
    <listitem>
   <para><xref linkend="web-agent-invalid-url-properties"/></para>
  </listitem>
      <listitem>
   <para><xref linkend="web-agent-ignore-server-check-properties"/></para>
  </listitem>
  <listitem>
   <para><xref linkend="web-agent-ignore-path-info-properties" /></para>
  </listitem>
    <listitem>
   <para><xref linkend="web-agent-multi-byte-properties" /></para>
  </listitem>
    <listitem>
   <para><xref linkend="web-agent-goto-parameter-name-properties"/></para>
  </listitem>
      <listitem>
   <para><xref linkend="web-agent-deprecated-properties"/></para>
  </listitem>
 </itemizedlist>

  <variablelist xml:id="web-agent-advice-handling-properties">
   <!-- OPENAM-754: Option to send composite advice in the query instead of sending it through a POST request -->
   <title>Advice Handling Properties</title>
   <varlistentry>
    <term>Composite Advice Handling (Not yet in OpenAM console)</term>
    <listitem>
     <para>As of version 3.0.4, when set to <literal>true</literal>, the agent
      sends composite advice in the query (GET request) instead of sending it
      through a POST request.</para>
     <para>Property: <literal>com.sun.am.use_redirect_for_advice</literal></para>
    </listitem>
   </varlistentry>
  </variablelist>

  <variablelist xml:id="web-agent-locale-properties">
   <title>Locale Properties</title>
   <varlistentry>
    <term>Agent Locale</term>
    <listitem>
     <para>The default locale for the agent.</para>
     <para>Property: <literal>com.sun.identity.agents.config.locale</literal></para>
     <para>Hot swap: no</para>
    </listitem>
   </varlistentry>
  </variablelist>

  <variablelist xml:id="web-agent-anonymous-user-properties">
   <title>Anonymous user Properties</title>
   <varlistentry>
    <term>Anonymous User</term>
    <listitem>
     <para>Enable or disable REMOTE_USER processing for anonymous users.</para>
     <para>Property: <literal>com.sun.identity.agents.config.anonymous.user.enable</literal></para>
    </listitem>
   </varlistentry>
  </variablelist>

  <variablelist xml:id="web-agent-cookie-processing-properties">
   <title>Cookie Processing Properties</title>
   <varlistentry>
    <term>Encode special characters in Cookies</term>
    <listitem>
     <para>When enabled, use URL encoding for special characters in cookies.
      This is useful when profile, session, and response attributes contain
      special characters, and the attributes fetch mode is set to
      <literal>HTTP_COOKIE</literal>.</para>
     <para>Property: <literal>com.sun.identity.agents.config.encode.cookie.special.chars.enable</literal></para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Profile Attributes Cookie Prefix</term>
    <listitem>
     <para>Sets cookie prefix in the attributes headers. Default:
      <literal>HTTP_</literal>.</para>
     <para>Property: <literal>com.sun.identity.agents.config.profile.attribute.cookie.prefix</literal></para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Profile Attributes Cookie Maxage</term>
    <listitem>
     <para>Maximum age in seconds of custom cookie headers. Default:
      300.</para>
     <para>Property: <literal>com.sun.identity.agents.config.profile.attribute.cookie.maxage</literal></para>
    </listitem>
   </varlistentry>
  </variablelist>

  <variablelist xml:id="web-agent-url-handling-properties">
   <title>URL Handling Properties</title>
   <varlistentry>
    <term>URL Comparison Case Sensitivity Check</term>
    <listitem>
     <para>When enabled, enforces case insensitivity in both policy and
      not enforced URL evaluation.</para>
     <para>Property: <literal>com.sun.identity.agents.config.url.comparison.case.ignore</literal></para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Encode URL's Special Characters</term>
    <listitem>
     <para>When enabled, encodes the URL which has special characters before
      doing policy evaluation.</para>
     <para>Property: <literal>com.sun.identity.agents.config.encode.url.special.chars.enable</literal></para>
    </listitem>
   </varlistentry>
  </variablelist>

  <variablelist xml:id="web-agent-ignore-naming-url-properties">
   <title>Ignore Naming URL Properties</title>
   <varlistentry>
    <term>Ignore Preferred Naming URL in Naming Request</term>
    <listitem>
     <para>When enabled, do not send a preferred naming URL in the naming request.</para>
     <para>Property: <literal>com.sun.identity.agents.config.ignore.preferred.naming.url</literal></para>
    </listitem>
   </varlistentry>
  </variablelist>

  <variablelist xml:id="web-agent-invalid-url-properties">
   <title>Invalid URL properties (Not yet in OpenAM console)</title>
   <varlistentry>
    <term>Invalid URL Regular Expression</term>
    <listitem>
     <para>Use a <link xlink:href="http://www.pcre.org/" xlink:show="new"
      >Perl-compatible regular expression</link> to filter out invalid
      request URLs. The policy agent rejects requests to invalid URLs
      with HTTP 403 Forbidden status without further processing. Use Advanced
      &gt; Custom Properties to set this in the agent profile.</para>

     <para>For example, to filter out URLs containing the symbols in the list
      ./, /., /, ., ,\, %00-%1f, %7f-%ff, %25, %2B, %2C, %7E, .info, use the
      following setting.</para>

     <programlisting language="ini">com.forgerock.agents.agent.invalid.url.regex= \
     ^((?!(|/\.|\./||*|\.info|%25|%2B|%2C|%[0-1][0-9a-fA-F]|%[7-9a-fA-F][0-9a-fA-F])).)$</programlisting>
    </listitem>
   </varlistentry>
  </variablelist>

  <variablelist xml:id="web-agent-ignore-server-check-properties">
   <title>Ignore Server Check Properties</title>
   <varlistentry>
    <term>Ignore Server Check</term>
    <listitem>
     <para>When enabled, do not check whether OpenAM is up before doing a
      302 redirect.</para>
     <para>Property: <literal>com.sun.identity.agents.config.ignore.server.check</literal></para>
    </listitem>
   </varlistentry>
  </variablelist>

  <variablelist xml:id="web-agent-ignore-path-info-properties">
   <title>Ignore Path Info Properties</title>
   <varlistentry>
    <term>Ignore Path Info in Request URL</term>
    <listitem>
     <para>When enabled, strip path info from the request URL while doing the
      Not Enforced List check, and URL policy evaluation. This is designed
      to prevent a user from accessing a URI by appending the matching pattern
      in the policy or not enforced list.</para>

     <!--<note><para>This setting is not supported by the Varnish Cache agent.</para></note>-->

     <para>For example, if the not enforced list includes
      <literal>http://host/*.gif</literal>, then stripping path info from the
      request URI prevents access to <literal>http://host/index.html</literal>
      by using <literal>http://host/index.html?hack.gif</literal>.</para>
     <para>However, when a web server is configured as a reverse proxy for a
      J2EE application server, the path info is interpreted to map a resource
      on the proxy server rather than the application server. This prevents the
      not enforced list or the policy from being applied to the part of the URI
      below the application server path if a wildcard character is used.</para>
     <para>For example, if the not enforced list includes
      <literal>http://host/webapp/servcontext/*</literal> and the request URL is
      <literal>http://host/webapp/servcontext/example.jsp</literal>, the path
      info is <literal>/servcontext/example.jsp</literal> and the resulting
      request URL with path info stripped is
      <literal>http://host/webapp/</literal>, which does not match the
      not enforced list. Thus when this property is enabled, path info is
      not stripped from the request URL even if there is a wildcard in the not
      enforced list or policy.</para>
     <para>Make sure therefore when this property is enabled that there is
      nothing following the wildcard in the not enforced list or policy.</para>
     <para>Property: <literal>com.sun.identity.agents.config.ignore.path.info</literal></para>
    </listitem>
   </varlistentry>
  </variablelist>

  <variablelist xml:id="web-agent-multi-byte-properties">
   <title>Multi-Byte Enable Properties</title>
   <varlistentry>
    <term>Native Encoding of Profile Attributes</term>
    <listitem>
     <para>When enabled, the agent encodes the LDAP header values in the
      default encoding of operating system locale. When disabled, the agent
      uses UTF-8.</para>
     <para>Property: <literal>com.sun.identity.agents.config.convert.mbyte.enable</literal></para>
    </listitem>
   </varlistentry>
  </variablelist>

  <variablelist xml:id="web-agent-goto-parameter-name-properties">
   <title>Goto Parameter Name Properties</title>
   <varlistentry>
    <term>Goto Parameter Name</term>
    <listitem>
     <para>Property used only when CDSSO is enabled. Only change the default
      <literal>goto</literal> value when the login URL has a landing page
      specified, such as
      <literal>com.sun.identity.agents.config.cdsso.cdcservlet.url
       = http://openam.example.com:8080/openam/cdcservlet?goto=
       http://www.example.com/landing.jsp</literal>.
      The agent uses this parameter to append the original request URL
      to this cdcservlet URL. The landing page consumes this parameter to
      redirect to the original URL.</para>
     <para>As an example, if you set this value to <literal>goto2</literal>,
      then the complete URL sent for authentication is
      <literal>http://openam.example.com:8080/openam/cdcservlet?goto=
       http://www.example.com/landing.jsp?goto2=http://www.example.com/original.jsp</literal>.</para>
     <para>Property: <literal>com.sun.identity.agents.config.redirect.param</literal></para>
    </listitem>
   </varlistentry>
  </variablelist>

  <variablelist xml:id="web-agent-deprecated-properties">
   <title>Deprecated Agent Properties</title>
   <varlistentry>
    <term>Anonymous User Default Value</term>
    <listitem>
     <para>User ID of unauthenticated users. Default:
      <literal>anonymous</literal>.</para>
     <para>Property: <literal>com.sun.identity.agents.config.anonymous.user.id</literal></para>
    </listitem>
   </varlistentry>
  </variablelist>
 </section>