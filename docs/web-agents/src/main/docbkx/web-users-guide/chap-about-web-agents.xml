<?xml version="1.0" encoding="UTF-8"?>
<!--
  ! CCPL HEADER START
  !
  ! This work is licensed under the Creative Commons
  ! Attribution-NonCommercial-NoDerivs 3.0 Unported License.
  ! To view a copy of this license, visit
  ! http://creativecommons.org/licenses/by-nc-nd/3.0/
  ! or send a letter to Creative Commons, 444 Castro Street,
  ! Suite 900, Mountain View, California, 94041, USA.
  !
  ! You can also obtain a copy of the license at
  ! src/main/resources/legal-notices/CC-BY-NC-ND.txt.
  ! See the License for the specific language governing permissions
  ! and limitations under the License.
  !
  ! If applicable, add the following below this CCPL HEADER, with the fields
  ! enclosed by brackets "[]" replaced with your own identifying information:
  !      Portions Copyright [yyyy] [name of copyright owner]
  !
  ! CCPL HEADER END
  !
  !      Copyright 2011-2015 ForgeRock AS.
  !    
-->
<chapter xml:id='chap-about-web-agents'
 xmlns='http://docbook.org/ns/docbook'
 version='5.0' xml:lang='en'
 xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'
 xsi:schemaLocation='http://docbook.org/ns/docbook
                     http://docbook.org/xml/5.0/xsd/docbook.xsd'
 xmlns:xlink='http://www.w3.org/1999/xlink'
 xmlns:xinclude='http://www.w3.org/2001/XInclude'>

 <title>About OpenAM Web Policy Agents</title>

 <indexterm>
  <primary>web policy agent</primary>
  <secondary>described</secondary>
 </indexterm>

 <para>OpenAM web policy agents provide light touch integration for web
  applications running on supported web servers.
  This chapter covers what web policy agents do and how they work.</para>
 
 <para>A <firstterm>policy agent</firstterm> enforces policy for OpenAM and protects
  all resources on the web server.
  The policy agent intercepts requests from users trying to access a protected
  web resource and denies access until the user has authorization from OpenAM
  to access the resource.</para>

 <note xml:id="one-agent-per-server">
  <para>
   A single policy agent can work with multiple applications.
   You therefore install only one policy agent per web server.
  </para>

  <para>
   Installing more than one policy agent in a web server is not supported.
  </para>
 </note>

 <section xml:id="web-agent-components">
  <title>Web Policy Agent Components</title>

  <indexterm>
   <primary>web policy agent</primary>
   <secondary>components of</secondary>
  </indexterm>

  <para>The web policy agent provides fast installation and light touch integration
   to protect the resources on the supported web server. The web agent consists of
   a web server plugin matching the API requirements of the particular web server
   and a native module that interfaces with OpenAM for its services.
  </para>

  <figure xml:id="figure-web-policy-agent">
   <title>Web Policy Agent</title>
    <mediaobject >
     <alt>Diagram of web policy agent use</alt>
     <imageobject>
      <imagedata fileref="images/web-policy-agent.png" format="PNG" />
     </imageobject>
     <textobject>
      <para>Simplified look at a web policy agent.</para>
     </textobject>
   </mediaobject>
  </figure>
 </section>

 <section xml:id="example-agent-interaction">
  <title>How the User, Web Policy Agent, and OpenAM Interact</title>

  <indexterm>
   <primary>web policy agent</primary>
   <secondary>how it works</secondary>
  </indexterm>

  <para>Imagine that a user attempts to access a protected resource before
   having authenticated by pointing the user's browser to a web page. Assume that you
   have configured OpenAM to protect the web page. Then, the web policy agent
   intercepting the user's browser's request finds no session token in the request,
   and so redirects the user's browser to the OpenAM login page for
   authentication. After the user has successfully authenticated, OpenAM
   sets a session token in a browser cookie, and redirects the browser back to
   the page the user tried to access initially.</para>

  <para>When the user's browser reiterates the request, the policy agent again
   checks that the request has a session token, finds a session token this
   time, and validates the session token with OpenAM. Given the valid session
   token, the policy agent gets a policy decision from OpenAM concerning whether
   the user can access the page. If OpenAM's Policy Service determines that
   the user is allowed to access the page, OpenAM responds to the policy agent
   that access should be granted. The web policy agent then permits the web
   page to be returned to the user's browser.</para>

  <para>The following diagram shows how the pieces fit together when a web
   client accesses a web page protected by a policy agent. This diagram is
   simplified to show only the essential principals rather than to describe
   every possible case.</para>

   <figure xml:id="figure-web-pa-interaction">
    <title>Web Policy Agent Interaction</title>
    <mediaobject>
     <alt>Diagram of web policy agent use</alt>
     <imageobject>
      <imagedata fileref="images/wpa-interaction.png" format="PNG"/>
     </imageobject>
     <textobject>
      <para>
       The interaction happens as described in the following list.
      </para>
     </textobject>
    </mediaobject>
   </figure>

  <orderedlist>
   <para>A web policy agent is a library installed in the web server and
    configured to be called by the web server when a client requests access
    to a protected resource in a web site. Here is how it works:</para>
   <listitem>
    <para>The web client requests access to a protected resource.</para>
   </listitem>
   <listitem>
    <para>The web server runs the request through the policy agent that
     protects the resource according to OpenAM policy. The policy agent
     acts to enforce policy, whereas the policy configuration and
     decisions are handled by OpenAM.</para>
   </listitem>
   <listitem>
    <para>The policy agent communicates with OpenAM to get the policy
     decision to enforce.</para>
   </listitem>
   <listitem>
    <para>For a resource to which OpenAM approves access, the policy agent
     allows access.</para>
   </listitem>
   <listitem>
    <para>The web server returns the requested access to the web client.</para>
   </listitem>
  </orderedlist>
 </section>
</chapter>
