<?xml version="1.0" encoding="UTF-8"?>
<!--
  ! CCPL HEADER START
  !
  ! This work is licensed under the Creative Commons
  ! Attribution-NonCommercial-NoDerivs 3.0 Unported License.
  ! To view a copy of this license, visit
  ! http://creativecommons.org/licenses/by-nc-nd/3.0/
  ! or send a letter to Creative Commons, 444 Castro Street,
  ! Suite 900, Mountain View, California, 94041, USA.
  !
  ! You can also obtain a copy of the license at
  ! src/main/resources/legal-notices/CC-BY-NC-ND.txt.
  ! See the License for the specific language governing permissions
  ! and limitations under the License.
  !
  ! If applicable, add the following below this CCPL HEADER, with the fields
  ! enclosed by brackets "[]" replaced with your own identifying information:
  !      Portions Copyright [yyyy] [name of copyright owner]
  !
  ! CCPL HEADER END
  !
  !      Copyright 2015 ForgeRock AS.
  !    
-->
<chapter xml:id='chap-manage-scripts-console'
 xmlns='http://docbook.org/ns/docbook'
 version='5.0' xml:lang='en'
 xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'
 xsi:schemaLocation='http://docbook.org/ns/docbook
                     http://docbook.org/xml/5.0/xsd/docbook.xsd'
 xmlns:xlink='http://www.w3.org/1999/xlink'>
 <title>Managing Scripts with the OpenAM Console</title>
 <indexterm><primary>Scripts</primary></indexterm>
 <indexterm><secondary>Console</secondary></indexterm>
 <para>This chapter shows you how to manage scripts used for client-side and
  server-side scripted authentication, custom policy conditions, and handling
  OpenID Connect claims by using the OpenAM console.</para>

   <para>For information on managing scripts by using the OpenAM
  console, see <olink targetptr="sec-manage-scripts-rest"
                      targetdoc="dev-guide" /> in the <citetitle>OpenAM
  Developer's Guide</citetitle>. For information on configuring script
    settings, see <olink targetptr="scripting-configuration"
                      targetdoc="reference" /> in the <citetitle>OpenAM
    Reference</citetitle>.</para>

 <para>OpenAM supports scripts in JavaScript or Groovy format, and the
  following script types:</para>
 
 <variablelist>
  <varlistentry>
   <term>Client-side Authentication</term>
   <listitem>
    <para>Scripts that are executed on the client during authentication.</para>
    <note><para>Client-side scripts must be in JavaScript format.</para></note>
   </listitem>
  </varlistentry>
    <varlistentry>
   <term>Server-side Authentication</term>
   <listitem>
    <para>Scripts that are executed on the server during authentication.</para>
   </listitem>
  </varlistentry>
    <varlistentry>
   <term>Policy Condition</term>
   <listitem>
    <para>Scripts used as conditions within policies. </para>
   </listitem>
  </varlistentry>
    <varlistentry>
   <term>OIDC Claims</term>
   <listitem>
    <para>Scripts that gather and populate the claims in a request when
     issuing an ID Token or making a request to the userinfo endpoint.</para>
   </listitem>
  </varlistentry>
 </variablelist>

 <para>User-created scripts are realm specific. OpenAM includes some
  global example scripts that can be used in any realm.</para>


 <procedure xml:id="manage-scripts-with-console">
  <title>To Manage Scripts by Using the OpenAM Console</title>
  <step>
   <para>Login as OpenAM administrator, <literal>amadmin</literal>.</para>
  </step>
  <step>
   <para>On the Realms menu, click the realm in which to manage the script,
    and then click Scripts.</para>
  </step>
  <step>
   <para>On the Scripts List page:</para>
   <stepalternatives>
    <step>
     <para>To create a script, click New Script.</para>
    </step>
    <step>
     <para>To edit an existing script, click the row in the list of scripts.</para>
    </step>
   </stepalternatives>
  </step>
  <step>
   <para>In the Select Script Type dialog box, select a script type, and
   then click Save.</para>
  </step>
  <step>
   <para>On the Create New page:</para>
   <substeps>
    <step>
     <para>Enter a name and description of the script.</para>
    </step>
    <step>
     <para>Optionally, to change the script type click the Change button and
      select a new script type from the dialog box.</para>
     <caution><para>Any existing code in the script is replaced when changing
      the script type.</para></caution>
    </step>
    <step>
     <para>Choose the script language, either JavaScript or Groovy.</para>
     <note><para>Not every script type supports both languages.</para></note>
    </step>
    <step>
     <para>Enter the source code in the Script field.</para>
     <tip><para>On supported browsers, click the Upload button, browse
     to the script file, and then click Open to upload the contents to
     the Script field.</para></tip>
    </step>
    <step>
     <para>Optionally, click Validate to check for compilation errors in the
      script.</para>
    </step>
    <step><para>Click Save to store the changes.</para></step>
   </substeps>
      <mediaobject xml:id="figure-script-editor-page">
    <alt>Creating a script by using the OpenAM console.</alt>
    <imageobject>
     <imagedata fileref="images/script-editor.png" format="PNG" />
    </imageobject>
    <textobject><para>Complete the form and click save to create a
     script.</para></textobject>
   </mediaobject>
  </step>
 </procedure>

  <procedure xml:id="delete-scripts-with-consle">
  <title>To Delete Scripts by Using the OpenAM Console</title>
  <step>
   <para>Login as OpenAM administrator, <literal>amadmin</literal>.</para>
  </step>
  <step>
   <para>On the Realms menu, click the realm in which to manage the script,
    and then click Scripts.</para>
  </step>
  <step>
   <para>On the Scripts List page:</para>
   <substeps>
    <step>
     <para>Select one or more scripts by clicking the checkbox in the
      relevant row.</para>
     <tip><para>To select all scripts, click the checkbox in the
      header row.</para></tip>
    </step>
    <step>
     <para>Click Delete.</para>
     <note><para>You can only delete user-created scripts. You cannot delete
      the global sample scripts.</para></note>
    </step>
   </substeps>
   </step>
 </procedure>

</chapter>
