<?xml version="1.0" encoding="UTF-8"?>
<!--
  ! CCPL HEADER START
  !
  ! This work is licensed under the Creative Commons
  ! Attribution-NonCommercial-NoDerivs 3.0 Unported License.
  ! To view a copy of this license, visit
  ! http://creativecommons.org/licenses/by-nc-nd/3.0/
  ! or send a letter to Creative Commons, 444 Castro Street,
  ! Suite 900, Mountain View, California, 94041, USA.
  !
  ! You can also obtain a copy of the license at
  ! src/main/resources/legal-notices/CC-BY-NC-ND.txt.
  ! See the License for the specific language governing permissions
  ! and limitations under the License.
  !
  ! If applicable, add the following below this CCPL HEADER, with the fields
  ! enclosed by brackets "[]" replaced with your own identifying information:
  !      Portions Copyright [yyyy] [name of copyright owner]
  !
  ! CCPL HEADER END
  !
  !      Copyright 2014-2015 ForgeRock AS.
  !
-->
<chapter xml:id='chap-install-multiple'
         xmlns='http://docbook.org/ns/docbook'
         version='5.0'
         xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'
         xsi:schemaLocation='http://docbook.org/ns/docbook
                     http://docbook.org/xml/5.0/xsd/docbook.xsd'
         xmlns:xlink='http://www.w3.org/1999/xlink'>
 <title>Installation Considerations for Multiple Servers</title>

 <indexterm>
  <primary>Installing</primary>
  <secondary>multiple servers</secondary>
 </indexterm>

 <indexterm>
  <primary>Installing</primary>
  <secondary>load balancer</secondary>
 </indexterm>

 <indexterm>
  <primary>Installing</primary>
  <secondary>proxy settings</secondary>
 </indexterm>

 <para>
  This chapter covers what to do when installing multiple OpenAM servers.
 </para>

 <section xml:id="considerations-multiple-servers">
  <title>Things to Consider When Installing Multiple Servers</title>

  <para>
   When installing multiple servers, consider the following points:
  </para>

  <itemizedlist>
   <listitem>
    <para>
     You generally install multiple servers to provide service availability.
     If one server is down for any reason, another server can respond instead.
     This means that you need some type of component, such as a load balancer or
     a proxying server, between incoming traffic and OpenAM to route around servers
     that are down.
    </para>

    <para>
     OpenAM uses a <firstterm>site</firstterm> for this purpose.
     In an OpenAM site, multiple OpenAM servers are configured in the same way,
     and accessed through a load balancer layer.<footnote>
      <para>
       Technically, it is possible to configure a site with only one OpenAM server.
      </para>
     </footnote>
     The load balancer can be implemented in hardware or software,
     but it is separate and independent from OpenAM software.
     When installed properly, a site configuration improves service availability,
     as the load balancer routes around OpenAM servers that are down,
     sending traffic to other servers in the site.
    </para>
   </listitem>

   <listitem>
    <para>
     You can use a load balancer layer to protect OpenAM services as well.
     The load balancer can restrict access to OpenAM services,
     throttle traffic, offload HTTPS encryption, and so forth.
    </para>
    <para>
     As an alternative, or in addition, you can use a separate reverse proxy.
    </para>
   </listitem>

   <listitem>
    <para>
     When you are protecting OpenAM with a load balancer or proxy service,
     configure your container so that OpenAM can trust
     the load balancer or proxy service.
    </para>
   </listitem>

   <listitem>
     <para>
      OpenAM authentication can depend on information
      about the user to authenticate,
      such as the IP address where the request originated.
      When OpenAM is accessed through a load balancer or proxy layer,
      pass this information along using request headers.
      Also, configure OpenAM to consume and to forward the headers as necessary.
      See <xref linkend="handle-request-headers" /> for details.
    </para>
   </listitem>
  </itemizedlist>
 </section>

 <section xml:id="configure-sites">
  <title>Configuring OpenAM Sites</title>

  <indexterm>
   <primary>sites</primary>
   <secondary>configuring</secondary>
  </indexterm>

  <para>
   The most expedient way to configure a server in a site
   is to set the site up during the initial OpenAM configuration.
   In the GUI configurator, this is done in the Site Configuration screen.
  </para>
  <para>
   It is also possible to configure a site separately.
   If you did not set up a site during initial configuration,
   perform the following steps to configure a site:
  </para>

  <procedure xml:id="configure-site-after-installation">
   <title>To Configure a Site With a First OpenAM Server</title>

   <para>
    The following steps show how to set up the site for the first OpenAM server.
   </para>

   <step>
    <para>
     Login to OpenAM Console as administrator,
     by default <literal>amadmin</literal>,
     and then browse to Configuration > Servers and Sites > Sites.
    </para>
   </step>

   <step>
    <para>
     Click New to start configuring the new site.
    </para>
   </step>

   <step>
    <para>
     On the New Site page enter the site name,
     and set the Primary URL to the load balancer URL
     that is the entry point for the site,
     such as <literal>https://lb.example.com/openam</literal>.
    </para>

    <para>
     The site URL is the URL to the load balancer in front of
     the OpenAM servers in the site.
     For example, if your load balancer listens for
     HTTPS on host <literal>lb.example.com</literal>
     and port <literal>443</literal>
     with OpenAM under <literal>/openam</literal>,
     then your site URL is <literal>https://lb.example.com/openam</literal>.
    </para>

    <para>
     Client applications and policy agents access the servers in the site
     through the site URL.
    </para>
   </step>

   <step>
    <para>
     Click Save to keep the site configuration.
    </para>
   </step>

   <step>
    <para>
     Under Configuration > Servers and Sites > Server,
     click the link to the server configuration.
    </para>
   </step>

   <step>
    <para>
     On the server configuration General tab page,
     set the Parent Site to the name of the site you just created,
     and then click Save to keep your changes.
    </para>

    <para>
     At this point, the server is part of the new site you have configured.
    </para>

    <para>
     For all additional servers in the OpenAM site,
     add them to the site at configuration time as described in
     <xref linkend="add-servers-to-site" />.
    </para>
   </step>
  </procedure>

 </section>

 <section xml:id="configure-lb">

  <title>Configuring Load Balancing for a Site</title>

   <para>
    Load balancer configuration requirements differ for OpenAM sites
    configured to use stateful and stateless sessions.<footnote>
    <para>
     Some OpenAM deployments use both stateful and stateless sessions. If your
     deployment uses a substantial number of stateful sessions, follow the
     recommendations for deployments with stateful sessions.
    </para>
    </footnote>
    For more information about OpenAM session types, see
    <olink targetdoc="admin-guide" targetptr="chap-session-state" />.
   </para>

   <section xml:id="configure-lb-stateful">

    <title>Load Balancer Configuration for Stateful Sessions</title>

    <para>
     An OpenAM site configured to use stateful sessions achieves the best
     performance when the server that originally authenticated a user
     continually manages that user's session, unless that server is no longer
     available.
    </para>

    <para>
     To achieve optimal performance, configure your load balancer for sticky
     sessions as follows:
    </para>

    <procedure xml:id="configure-site-load-balancing">
     <title>To Configure Site Load Balancing for Deployments With Stateful Sessions</title>

     <step>
      <para>
       For each OpenAM server in the site, select
       Configuration > Servers and Sites > Servers > <replaceable>Server Name</replaceable>,
       set Parent Site to the site you created,
       and then Save your work.
      </para>
     </step>

     <step>
      <para>
       Make the <literal>amlbcookie</literal> value unique for each OpenAM server.
      </para>

      <substeps>
       <step>
        <para>
         For each OpenAM server console in the site, browse to
         Configuration > Servers and Sites > Servers
         > <replaceable>Server Name</replaceable> > Advanced,
         and set <literal>com.iplanet.am.lbcookie.value</literal>
         to a unique value.
        </para>

        <para>
         By default, the cookie value is set to the OpenAM server ID.
        </para>

        <para>
         Changes take effect only after you restart the OpenAM server.
        </para>
       </step>

       <step>
        <para>
         Restart each OpenAM server where you changed the cookie value.
         You can then check the cookie value by logging in to OpenAM console,
         and examining the <literal>amlbcookie</literal> cookie in your browser.
        </para>
       </step>
      </substeps>
     </step>

     <step>
      <para>
       Configure your load balancer to perform sticky load balancing
       based on the <literal>amlbcookie</literal> value.
      </para>

      <para>
       In other words, the load balancer layer must keep track of
       which <literal>amlbcookie</literal> cookie value
       corresponds to which OpenAM server.
      </para>

      <para>
       When the load balancer receives a request,
       it inspects the value of the <literal>amlbcookie</literal> cookie,
       and then forwards the request to the corresponding OpenAM server.
      </para>
     </step>

    </procedure>

    <section xml:id="lb-termination">

     <title>Load Balancer Termination</title>

      <para>
       When traffic to and from the load balancer is protected with HTTPS,
       the approach described in <xref linkend="configure-site-load-balancing"></xref>
       requires that you terminate the connection on the load balancer. You then
       either re-encrypt the traffic from the load balancer to OpenAM, or make
       connections from the load balancer to OpenAM over HTTP.
      </para>

    </section>

    <section xml:id="lb-and-crosstalk">

     <title>Request Forwarding Caveats</title>

     <para>Sticky load balancing based on the value of the
      <literal>amlbcookie</literal> cookie does not guarantee request forwarding
      to the corresponding OpenAM server in all cases. For example,
      ForgeRock Common REST API calls do not typically use cookies. Therefore,
      load balancers are not able to route these calls to the OpenAM server
      on which a user's session resides.
     </para>
     <para>
      The OpenAM server that does not hold the user's session can attempt to
      locate the user's session by retrieving it from the Core Token Service's
      token store, or by communicating with other OpenAM servers in an OpenAM site
      using back-channel communication over the network. This back-channel
      communication is called <firstterm>crosstalk</firstterm>.
     </para>
     <para>
      By default, OpenAM sites are configured with the Reduce Crosstalk option
      enabled. With this option enabled, the OpenAM server that
      does not hold the user's session attempts to retrieve it from the Core Token
      Service's token store if session failover is enabled.
     </para>
     <para>
      For example, suppose you deploy several OpenAM servers in a site
      configured for session failover. If the site's load balancer directs a
      user's request to a server other than the OpenAM server that held the
      user's session, then the server will attempt to retrieve the session from
      the Core Token Service, provided you have not modified the default OpenAM
      configuration.
     </para>
     <para>
      If you disable the Reduce Crosstalk option,
      the OpenAM server that does not hold the user's session attempts to retrieve
      it by using crosstalk. Because crosstalk generates network traffic,
      locating sessions from the Core Token Service's token store is preferred for
      performance reasons.
     </para>
     <para>
      Requests to update sessions, such as requests to log out, reset the session
      idle time, or set a session attribute, always use crosstalk to ensure the
      integrity of the update requests.
     </para>
     <para>
      See
      <xref linkend="chap-session-failover" />
      for information about configuring remote session location options.
     </para>
    </section>
   </section>

   <section xml:id="configure-lb-stateless">

    <title>Load Balancer Configuration for Stateless Sessions</title>

    <para>
     An OpenAM site configured to use stateless sessions does not require
     any special load balancer configuration.
    </para>

    <para>
     A request from a user to an OpenAM site does not need to be processed on
     the OpenAM server that originally authenticated the user. Any server in the
     site can accept a request from an OpenAM user with no performance
     degradation because the user's session resides in an HTTP cookie&#x2014;not
     on the server&#x2014;and is passed to the OpenAM server along with the
     request.
    </para>
   </section>

  </section>

  <section xml:id="handle-request-headers">
   <title>Handling HTTP Request Headers</title>

   <indexterm>
    <primary>HTTP request headers</primary>
    <secondary>handling</secondary>
   </indexterm>

   <para>
    HTTP requests can include information needed for access management,
    such as the client IP address used for adaptive risk-based authentication.
   </para>

   <para>
    Configure your load balancer or proxy to
    pass the information to OpenAM by using request headers.
    For example, the load balancer or proxy can send the client IP address
    by using the <literal>X-Forwarded-For</literal> HTTP request header.
   </para>

   <para>
    Also configure OpenAM to consume and to forward the headers as necessary.
    When configuring OpenAM through the Console, you set the following properties
    under Configuration > Servers and Sites > Servers
    > <replaceable>Server Name</replaceable> > Advanced.
   </para>

   <para>
    For example, to configure OpenAM to look for the client IP address
    in the <literal>X-Forwarded-For</literal> request header,
    set the advanced configuration property
    <literal>com.sun.identity.authentication.client.ipAddressHeader</literal>
    to <literal>X-Forwarded-For</literal>.
   </para>

   <para>
    In a site configuration where one OpenAM server
    can forward requests to another OpenAM server,
    you can retain the header by adding it to the advanced configuration property
    <literal>openam.retained.http.request.headers</literal>.
    If <literal>X-Forwarded-For</literal> is the only additional header to retain,
    set <literal>openam.retained.http.request.headers</literal> to
    <literal>X-DSAMEVersion,X-Forwarded-For</literal>, for example.
   </para>
  </section>
</chapter>
